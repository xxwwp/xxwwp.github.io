{
    "componentChunkName": "component---src-templates-record-tsx",
    "path": "/record/4",
    "result": {"data":{"allMarkdownRemark":{"nodes":[{"excerpt":"使用 <feFlood> 滤镜可以在矩形滤镜区域内进行泛色填充，<feFlood> 的填充的区域始终是一个矩形。它的效果类似遮罩 <mask>。 它有两个属性分别是： flood-color 这个属性用来设置填充颜色； flood-opacity…","fields":{"path":"/docs/svg/filter/泛色"},"frontmatter":{"title":"svg 泛色 feFlood","archives":["专栏","svg"],"createAt":"2021-08-18","tags":["svg","滤镜","泛色","feFlood","flood-color","flood-opacity"]}},{"excerpt":"<feGaussianBlur> 是高斯模糊滤镜。 该滤镜对输入图像进行高斯模糊，属性 stdDeviation 中指定的数量定义了钟形。 示例： 效果如下： 高斯模糊效果就像近视一样。","fields":{"path":"/docs/svg/filter/高斯模糊"},"frontmatter":{"title":"svg 高斯模糊 feGaussianBlue","archives":["专栏","svg"],"createAt":"2021-08-18","tags":["svg","滤镜","高斯模糊","stdDeviation","feGaussianBlue"]}},{"excerpt":"使用 <feOffset> 滤镜可以设置图案的偏移量，类似 css 中的相对定位效果。 可以使用 dx、dy…","fields":{"path":"/docs/svg/filter/偏移"},"frontmatter":{"title":"svg 偏移 feOffset","archives":["专栏","svg"],"createAt":"2021-08-18","tags":["svg","滤镜","偏移","feOffset"]}},{"excerpt":"混合 <feBlend> 混合滤镜用来把两个滤镜或者输入源进行混合，混合的方式也有多种。 <feBlend> 滤镜有以下属性： 属性 值类型 描述 in 参考这里 输入源 1 in2 同 in 属性 输入源 2 mode normal | multiply | screen…","fields":{"path":"/docs/svg/filter/混合"},"frontmatter":{"title":"svg 混合 feBlend","archives":["专栏","svg"],"createAt":"2021-08-18","tags":["svg","滤镜","混合","混合模式","feBlend"]}},{"excerpt":"认识 色彩矩阵采用矩阵乘法来对图案从新进行色彩计算，它可以重新计算 R、G、B、A 四个值的比重。 比如说你不想去掉蓝光，又或者希望得到一张黑白图，又或者改变明暗度等等，都可以使用色彩矩阵来实现。 <fecolormatrix…","fields":{"path":"/docs/svg/filter/色彩矩阵"},"frontmatter":{"title":"svg 色彩矩阵 feColorMatrix","archives":["专栏","svg"],"createAt":"2021-08-18","tags":["svg","滤镜","色彩矩阵","feColorMatrix","color","matrix"]}},{"excerpt":"介绍 <feComponentTransfer> 滤镜为组件置换滤镜，它允许你配合 <feFuncR>、<feFuncG>、<feFuncB>、<feFuncA> 这些色彩通道组件对 RGBA…","fields":{"path":"/docs/svg/filter/单通道色彩从分布"},"frontmatter":{"title":"svg 单通道色彩从分布 feComponentTransfer 与 feFunc 相关函数","archives":["专栏","svg"],"createAt":"2021-08-18","tags":["svg","feComponentTransfer","feFunc","table 表格分布","discrete 离散分布","linear 线性分布","gamma 伽马分布"]}},{"excerpt":"概述 svg 使用 xml 语言编写，早版本的 svg 文件需要编写 DTD，类似： svg 后续版本并没有这种说明，因为这样的代码无法正常嵌入到其他 xml 文档中，xml 有很多种，不同 xml 文件可能会复用同一元素名导致解析出错，比如 xhtml 和 svg…","fields":{"path":"/docs/svg/简介"},"frontmatter":{"title":"svg 简介","archives":["专栏","svg"],"createAt":"2021-08-11","tags":["svg","格式","xml","引入方式","坐标","viewBox","内嵌"]}},{"excerpt":"<g>、<use /> 元素 使用 <g> 元素可以把属性赋给一组 svg 元素，比如： 此时圆形和矩形区域都会填充红色。 但是它的功能远不止于此，它同时还是用来组合对象的容器，你可以把一些组合放到 <g> 元素中，然后给 <g> 元素一个 id 属性，之后可以使用 <use…","fields":{"path":"/docs/svg/基础变形"},"frontmatter":{"title":"svg 基础变形","archives":["专栏","svg"],"createAt":"2021-08-11","tags":["svg","g","use","transform"]}},{"excerpt":"剪裁 svg 中的剪裁更像是过滤的效果，筛选出需要的部分，把不需要的部分移除。 剪裁之前，需要定义一个剪裁区域，在 <defs> 元素中使用 <clipPath> 元素描述。<clipPath> 元素也需要有一个 id，方便其他元素引用。在 <clipPath…","fields":{"path":"/docs/svg/剪裁和遮罩"},"frontmatter":{"title":"svg 剪裁和遮罩","archives":["专栏","svg"],"createAt":"2021-08-11","tags":["svg","剪裁","clipPath","遮罩","mask","透明度"]}},{"excerpt":"参考 图像 类似于 HTML 中 的 <img> 元素，svg 中可以使用 <image> 元素插入图片，支持 PNG、JPG 和 SVG 等类型的图片。 嵌入的图片被定义为一个普通的 svg 元素，所以你可以对其进行剪裁、遮罩、变形等。 <image/> 元素和 <rect…","fields":{"path":"/docs/svg/资源嵌入"},"frontmatter":{"title":"svg 资源嵌入","archives":["专栏","svg"],"createAt":"2021-08-11","tags":["svg","图片","图像","图形","资源嵌入","image"]}}]}},"pageContext":{"limit":10,"skip":30,"numPages":5,"currentPage":4}},
    "staticQueryHashes": []}